def is_digit() [C] -> [C,B] {
  dec('0')
  ltc_(10)
}

def main() {
  pushi(0)
  pushi(1)
  push_read
  while (dupc c_to_b) {
    if (eqc_('d')) {
      popc push_read if (eqc_('o')) {
        popc push_read
        if (eqc_('(')) {
          popc push_read if (eqc_(')')) {
            popc
            popi
            pushi(1)
            pushc(0)
          }
        }
        if (eqc_('n')) {
          popc push_read if (eqc_('\'')) {
            popc push_read if (eqc_('t')) {
              popc push_read if (eqc_('(')) {
                popc push_read if (eqc_(')')) {
                  popc
                  popi
                  pushi(0)
                  pushc(0)
                }
              }
            }
          }
        }
      }
    }
    if (eqc_('m')) {
      popc
      push_read
      if (eqc_('u')) {
        popc
        push_read
        if (eqc_('l')) {
          popc
          push_read
          if (eqc_('(')) {
            popc
            pushi(0)
            push_read
            if (is_digit) {
              c_to_i
              addi
              push_read
              while (is_digit) {
                c_to_i
                swapi
                pushi(10)
                muli
                addi
                push_read
              }
              inc('0')
              if (eqc_(',')) {
                popc
                pushi(0)
                push_read
                if (is_digit) {
                  c_to_i
                  addi
                  push_read
                  while (is_digit) {
                    c_to_i
                    swapi
                    pushi(10)
                    muli
                    addi
                    push_read
                  }
                  inc('0')
                  if (eqc_(')')) {
                    popc
                    #
                    muli          // [T,F,M]
                    swapi
                    dupi
                    rolli4(1)     // [F,T,M,F]
                    muli
                    addi
                    swapi
                    pushi(0)
                    pushi(0)
                    pushc(0)
                    #
                  }
                }
                popc
                popi
                pushc(0)
              }
            }
            popc
            popi
            pushc(0)
          }
        }
      }
    }
    popc
    push_read
  }
  popc
  popi
  printi endl
  popi
}
