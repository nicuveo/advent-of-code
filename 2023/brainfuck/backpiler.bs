




def impure read_symbol() {
  +> set(79) >
  while (readc nec_('\n')) {
      swapc -
      [<]>+[>]
  }
  popc
  [<]>->[>]<
  [
    -> swapc
  ]
}



def impure copy_first_byte() {
  >>>>>>>>>>>>>>>>>>>>>
  [<+<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>-]<[>+<-]>
  <<<<<<<<<<<<<<<<<<<<<
}

def impure inline l80() { <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< }
def impure inline r80() { >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> }

def impure main() {
  read_symbol
  read_symbol
  read_symbol
  read_symbol
  read_symbol
  read_symbol
  read_symbol
  read_symbol

  >>>>>>>>>>>>>>>>>>>>

  >,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,
  >,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,
  >,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,
  >,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,

  l80 <<<<<<<<<<<<<<<<<<<<
  copy_first_byte [
    [-]

    if (eqc_(0)) { l80 > [ [ r80 +>+< l80 - ] r80 >[ < l80 + r80 > - ]< >>>>>>>>>>>>>>>>>>>> [ <<<<<<<<<<<<<<<<<<<+<- >>>>>>>>>>>>>>>>>>>>- ] <<<<<<<<<<<<<<<<<<<< >[ >>>>>>>>>>>>>>>>>>>+ <<<<<<<<<<<<<<<<<<<- ]< c_to_b + l80 > ] r80 <<[>-[<+>-]<<] >-[-<+>]< c_to_b not if (eqc_(1)) { prints(".") [-] l80 [ r80 +>+< l80 -] r80 >[ < l80 + r80 > -]< } }
    if (eqc_(0)) { l80 l80 > [ [ r80 r80 +>+< l80 l80 - ] r80 r80 >[ < l80 l80 + r80 r80 > - ]< >>>>>>>>>>>>>>>>>>>> [ <<<<<<<<<<<<<<<<<<<+<- >>>>>>>>>>>>>>>>>>>>- ] <<<<<<<<<<<<<<<<<<<< >[ >>>>>>>>>>>>>>>>>>>+ <<<<<<<<<<<<<<<<<<<- ]< c_to_b + l80 l80 > ] r80 r80 <<[>-[<+>-]<<] >-[-<+>]< c_to_b not if (eqc_(1)) { prints(",") [-] l80 l80 [ r80 r80 +>+< l80 l80 -] r80 r80 >[ < l80 l80 + r80 r80 > -]< } }
    if (eqc_(0)) { l80 l80 l80 > [ [ r80 r80 r80 +>+< l80 l80 l80 - ] r80 r80 r80 >[ < l80 l80 l80 + r80 r80 r80 > - ]< >>>>>>>>>>>>>>>>>>>> [ <<<<<<<<<<<<<<<<<<<+<- >>>>>>>>>>>>>>>>>>>>- ] <<<<<<<<<<<<<<<<<<<< >[ >>>>>>>>>>>>>>>>>>>+ <<<<<<<<<<<<<<<<<<<- ]< c_to_b + l80 l80 l80 > ] r80 r80 r80 <<[>-[<+>-]<<] >-[-<+>]< c_to_b not if (eqc_(1)) { prints("]") [-] l80 l80 l80 [ r80 r80 r80 +>+< l80 l80 l80 -] r80 r80 r80 >[ < l80 l80 l80 + r80 r80 r80 > -]< } }
    if (eqc_(0)) { l80 l80 l80 l80 > [ [ r80 r80 r80 r80 +>+< l80 l80 l80 l80 - ] r80 r80 r80 r80 >[ < l80 l80 l80 l80 + r80 r80 r80 r80 > - ]< >>>>>>>>>>>>>>>>>>>> [ <<<<<<<<<<<<<<<<<<<+<- >>>>>>>>>>>>>>>>>>>>- ] <<<<<<<<<<<<<<<<<<<< >[ >>>>>>>>>>>>>>>>>>>+ <<<<<<<<<<<<<<<<<<<- ]< c_to_b + l80 l80 l80 l80 > ] r80 r80 r80 r80 <<[>-[<+>-]<<] >-[-<+>]< c_to_b not if (eqc_(1)) { prints("[") [-] l80 l80 l80 l80 [ r80 r80 r80 r80 +>+< l80 l80 l80 l80 -] r80 r80 r80 r80 >[ < l80 l80 l80 l80 + r80 r80 r80 r80 > -]< } }
    if (eqc_(0)) { l80 l80 l80 l80 l80 > [ [ r80 r80 r80 r80 r80 +>+< l80 l80 l80 l80 l80 - ] r80 r80 r80 r80 r80 >[ < l80 l80 l80 l80 l80 + r80 r80 r80 r80 r80 > - ]< >>>>>>>>>>>>>>>>>>>> [ <<<<<<<<<<<<<<<<<<<+<- >>>>>>>>>>>>>>>>>>>>- ] <<<<<<<<<<<<<<<<<<<< >[ >>>>>>>>>>>>>>>>>>>+ <<<<<<<<<<<<<<<<<<<- ]< c_to_b + l80 l80 l80 l80 l80 > ] r80 r80 r80 r80 r80 <<[>-[<+>-]<<] >-[-<+>]< c_to_b not if (eqc_(1)) { prints("-") [-] l80 l80 l80 l80 l80 [ r80 r80 r80 r80 r80 +>+< l80 l80 l80 l80 l80 -] r80 r80 r80 r80 r80 >[ < l80 l80 l80 l80 l80 + r80 r80 r80 r80 r80 > -]< } }
    if (eqc_(0)) { l80 l80 l80 l80 l80 l80 > [ [ r80 r80 r80 r80 r80 r80 +>+< l80 l80 l80 l80 l80 l80 - ] r80 r80 r80 r80 r80 r80 >[ < l80 l80 l80 l80 l80 l80 + r80 r80 r80 r80 r80 r80 > - ]< >>>>>>>>>>>>>>>>>>>> [ <<<<<<<<<<<<<<<<<<<+<- >>>>>>>>>>>>>>>>>>>>- ] <<<<<<<<<<<<<<<<<<<< >[ >>>>>>>>>>>>>>>>>>>+ <<<<<<<<<<<<<<<<<<<- ]< c_to_b + l80 l80 l80 l80 l80 l80 > ] r80 r80 r80 r80 r80 r80 <<[>-[<+>-]<<] >-[-<+>]< c_to_b not if (eqc_(1)) { prints("+") [-] l80 l80 l80 l80 l80 l80 [ r80 r80 r80 r80 r80 r80 +>+< l80 l80 l80 l80 l80 l80 -] r80 r80 r80 r80 r80 r80 >[ < l80 l80 l80 l80 l80 l80 + r80 r80 r80 r80 r80 r80 > -]< } }
    if (eqc_(0)) { l80 l80 l80 l80 l80 l80 l80 > [ [ r80 r80 r80 r80 r80 r80 r80 +>+< l80 l80 l80 l80 l80 l80 l80 - ] r80 r80 r80 r80 r80 r80 r80 >[ < l80 l80 l80 l80 l80 l80 l80 + r80 r80 r80 r80 r80 r80 r80 > - ]< >>>>>>>>>>>>>>>>>>>> [ <<<<<<<<<<<<<<<<<<<+<- >>>>>>>>>>>>>>>>>>>>- ] <<<<<<<<<<<<<<<<<<<< >[ >>>>>>>>>>>>>>>>>>>+ <<<<<<<<<<<<<<<<<<<- ]< c_to_b + l80 l80 l80 l80 l80 l80 l80 > ] r80 r80 r80 r80 r80 r80 r80 <<[>-[<+>-]<<] >-[-<+>]< c_to_b not if (eqc_(1)) { prints(">") [-] l80 l80 l80 l80 l80 l80 l80 [ r80 r80 r80 r80 r80 r80 r80 +>+< l80 l80 l80 l80 l80 l80 l80 -] r80 r80 r80 r80 r80 r80 r80 >[ < l80 l80 l80 l80 l80 l80 l80 + r80 r80 r80 r80 r80 r80 r80 > -]< } }
    if (eqc_(0)) { l80 l80 l80 l80 l80 l80 l80 l80 > [ [ r80 r80 r80 r80 r80 r80 r80 r80 +>+< l80 l80 l80 l80 l80 l80 l80 l80 - ] r80 r80 r80 r80 r80 r80 r80 r80 >[ < l80 l80 l80 l80 l80 l80 l80 l80 + r80 r80 r80 r80 r80 r80 r80 r80 > - ]< >>>>>>>>>>>>>>>>>>>> [ <<<<<<<<<<<<<<<<<<<+<- >>>>>>>>>>>>>>>>>>>>- ] <<<<<<<<<<<<<<<<<<<< >[ >>>>>>>>>>>>>>>>>>>+ <<<<<<<<<<<<<<<<<<<- ]< c_to_b + l80 l80 l80 l80 l80 l80 l80 l80 > ] r80 r80 r80 r80 r80 r80 r80 r80 <<[>-[<+>-]<<] >-[-<+>]< c_to_b not if (eqc_(1)) { prints("<") [-] l80 l80 l80 l80 l80 l80 l80 l80 [ r80 r80 r80 r80 r80 r80 r80 r80 +>+< l80 l80 l80 l80 l80 l80 l80 l80 -] r80 r80 r80 r80 r80 r80 r80 r80 >[ < l80 l80 l80 l80 l80 l80 l80 l80 + r80 r80 r80 r80 r80 r80 r80 r80 > -]< } }

    if (eqc_(0)) {
      >>>>>>>>>>>>>>>>>>>>>.<<<<<<<<<<<<<<<<<<<<<[-]+
    }

    [-
      >>>>>>>>>>>>>>>>>>>>>
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>],
      l80 <<<<<<<<<<<<<<<<<<<<
    ]

  copy_first_byte ]
}
