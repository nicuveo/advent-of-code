// read a given input symbol until we encounter a newline
// we assume input symbols do not contain a \0, nor a newline
// and that they're less than 80 characters long
//
// each symbol is preceded by a leading byte that contains its length
def impure read_symbol() {
  +> set(79) >
  while (readc nec_('\n')) {
      swapc -
      [<]>+[>]
  }
  popc
  [<]>->[>]<
  [
    -> swapc
  ]
}

// copy the first byte of the buffer to the current position
// using the LEFT side of the buffer as temporary storage
def impure copy_first_byte() {
  >>>>>>>>>>>>>>>>>>>>>
  [<+<<<<<<<<<<<<<<<<<<<<+>>>>>>>>>>>>>>>>>>>>>-]<[>+<-]>
  <<<<<<<<<<<<<<<<<<<<<
}

def impure inline l80() { <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< }
def impure inline r80() { >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> }

def impure main() {
  read_symbol // <
  read_symbol // >
  read_symbol // +
  read_symbol // -
  read_symbol // [
  read_symbol // ]
  read_symbol // ,
  read_symbol // .
  // leave 20 characters buffer
  >>>>>>>>>>>>>>>>>>>>
  // initialize the buffer
  >,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,
  >,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,
  >,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,
  >,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,
  // go back to the starting point
  l80 <<<<<<<<<<<<<<<<<<<<

#define DO_SYMBOL(goL, goR, result)     \
    goL                                 \
    > [                                 \
      [ goR +>+< goL - ]                \
      goR                               \
      >[ < goL + goR > - ]<             \
      >>>>>>>>>>>>>>>>>>>>              \
      [                                 \
        <<<<<<<<<<<<<<<<<<<+<-          \
        >>>>>>>>>>>>>>>>>>>>-           \
      ]                                 \
      <<<<<<<<<<<<<<<<<<<<              \
      >[                                \
        >>>>>>>>>>>>>>>>>>>+            \
        <<<<<<<<<<<<<<<<<<<-            \
      ]<                                \
      c_to_b +                          \
      goL                               \
    > ]                                 \
    goR                                 \
    <<[>-[<+>-]<<] >-[-<+>]< c_to_b not \
    if (eqc_(1)) {                      \
      prints(result)                    \
      [-]                               \
      goL                               \
      [ goR +>+< goL -]                 \
      goR                               \
      >[ < goL + goR > -]<              \
    }

  // while the bufer isn't empty
  copy_first_byte [
    [-]

    if (eqc_(0)) { DO_SYMBOL(l80,                             r80,                             ".") }
    if (eqc_(0)) { DO_SYMBOL(l80 l80,                         r80 r80,                         ",") }
    if (eqc_(0)) { DO_SYMBOL(l80 l80 l80,                     r80 r80 r80,                     "]") }
    if (eqc_(0)) { DO_SYMBOL(l80 l80 l80 l80,                 r80 r80 r80 r80,                 "[") }
    if (eqc_(0)) { DO_SYMBOL(l80 l80 l80 l80 l80,             r80 r80 r80 r80 r80,             "-") }
    if (eqc_(0)) { DO_SYMBOL(l80 l80 l80 l80 l80 l80,         r80 r80 r80 r80 r80 r80,         "+") }
    if (eqc_(0)) { DO_SYMBOL(l80 l80 l80 l80 l80 l80 l80,     r80 r80 r80 r80 r80 r80 r80,     ">") }
    if (eqc_(0)) { DO_SYMBOL(l80 l80 l80 l80 l80 l80 l80 l80, r80 r80 r80 r80 r80 r80 r80 r80, "<") }

    if (eqc_(0)) {
      >>>>>>>>>>>>>>>>>>>>>.<<<<<<<<<<<<<<<<<<<<<[-]+
    }

    [-
      >>>>>>>>>>>>>>>>>>>>>
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>]
      [-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>][-]>[-<+>],
      l80 <<<<<<<<<<<<<<<<<<<<
    ]

  copy_first_byte ]
}
