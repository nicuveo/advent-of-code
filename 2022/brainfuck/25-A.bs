def impure i_to_i64() {
  >>>> rollc8(4)
}

def impure pushi64(I i) {
  pushi(0) pushi(i)
}

def impure popi64() {
  popi popi
}

def impure swapi64() {
  rollc16(8)
}

def impure addi64() {
  <<<<<<<<[->>>>>>>>>>+                        <<<<<<<<<<]>>>>>>>>[->>+ dupc not [-<<+>>] popc <<]>>[-<<<<<<<<<<+>>>>>>>>>>]<<<
  <<<<<<<<[->>>>>>>>>>+ dupc not [-<<+>>] popc <<<<<<<<<<]>>>>>>>>[->>+ dupc not [-<<+>>] popc <<]>>[-<<<<<<<<<<+>>>>>>>>>>]<<<
  <<<<<<<<[->>>>>>>>>>+ dupc not [-<<+>>] popc <<<<<<<<<<]>>>>>>>>[->>+ dupc not [-<<+>>] popc <<]>>[-<<<<<<<<<<+>>>>>>>>>>]<<<
  <<<<<<<<[->>>>>>>>>>+ dupc not [-<<+>>] popc <<<<<<<<<<]>>>>>>>>[->>+ dupc not [-<<+>>] popc <<]>>[-<<<<<<<<<<+>>>>>>>>>>]<<<
  <<<<<<<<[->>>>>>>>>>+ dupc not [-<<+>>] popc <<<<<<<<<<]>>>>>>>>[->>+ dupc not [-<<+>>] popc <<]>>[-<<<<<<<<<<+>>>>>>>>>>]<<<
  <<<<<<<<[->>>>>>>>>>+ dupc not [-<<+>>] popc <<<<<<<<<<]>>>>>>>>[->>+ dupc not [-<<+>>] popc <<]>>[-<<<<<<<<<<+>>>>>>>>>>]<<<
  <<<<<<<<[->>>>>>>>>>+ dupc not [-<<+>>] popc <<<<<<<<<<]>>>>>>>>[->>+ dupc not [-<<+>>] popc <<]>>[-<<<<<<<<<<+>>>>>>>>>>]<<<
  <<<<<<<<[->>>>>>>>>>+                        <<<<<<<<<<]>>>>>>>>[->>+                        <<]>>[-<<<<<<<<<<+>>>>>>>>>>]<<<
}


def impure subi64() {
  [->>+                        <<]<<<<<<<<[->>>>>>>>>> dupc not [-<<+>>] popc -<<<<<<<<<<]>>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>] <[>+<-]>[-<-<+>>] <<<
  [->>+ dupc not [-<<->>] popc <<]<<<<<<<<[->>>>>>>>>> dupc not [-<<+>>] popc -<<<<<<<<<<]>>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>] <[>+<-]>[-<-<+>>] <<<
  [->>+ dupc not [-<<->>] popc <<]<<<<<<<<[->>>>>>>>>> dupc not [-<<+>>] popc -<<<<<<<<<<]>>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>] <[>+<-]>[-<-<+>>] <<<
  [->>+ dupc not [-<<->>] popc <<]<<<<<<<<[->>>>>>>>>> dupc not [-<<+>>] popc -<<<<<<<<<<]>>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>] <[>+<-]>[-<-<+>>] <<<
  [->>+ dupc not [-<<->>] popc <<]<<<<<<<<[->>>>>>>>>> dupc not [-<<+>>] popc -<<<<<<<<<<]>>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>] <[>+<-]>[-<-<+>>] <<<
  [->>+ dupc not [-<<->>] popc <<]<<<<<<<<[->>>>>>>>>> dupc not [-<<+>>] popc -<<<<<<<<<<]>>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>] <[>+<-]>[-<-<+>>] <<<
  [->>+ dupc not [-<<->>] popc <<]<<<<<<<<[->>>>>>>>>> dupc not [-<<+>>] popc -<<<<<<<<<<]>>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>] <[>+<-]>[-<-<+>>] <<<
  [->>+ dupc not [-<<->>] popc <<]<<<<<<<<[->>>>>>>>>>                        -<<<<<<<<<<]>>>>>>>>>>[-<<<<<<<<<<+>>>>>>>>>>] <[-]               <<
}

def impure eqi64_(I i) [] -> [B] {
  dupi2 pushi64(i) eqi64
}

def impure gti64_(I i) [] -> [B] {
  dupi2 pushi64(i) swapi64 gti64
}

def impure eqi64() {
  subi64
  [[-]>+<]<
  [[-]>>+<<]<
  [[-]>>>+<<<]<
  [[-]>>>>+<<<<]<
  [[-]>>>>>+<<<<<]<
  [[-]>>>>>>+<<<<<<]<
  [[-]>>>>>>>+<<<<<<<]<
  [[-]>>>>>>>>+<<<<<<<<]+
  >>>>>>>>[[-]<<<<<<<<->>>>>>>>]<<<<<<<<
}

def impure gti64() {
  swapi64 lti64
}

def impure lti64() {
  subi64 popc popc popc popc popc popc popc pushc(128) lec
}

def impure gei64() [I,I,I,I] -> [B] {
  lti64 not
}

def impure divmodi64() {
  pushi64(0) rolli6(2)
  while (dupi4 gei64) {
    dupi4 subi64 swapi64 popi64
    rolli6(4) pushi64(1) addi64 rolli6(2)
  }
  swapi64 popi64
}


def impure main() {
  >>>>>>>>>>>>>>>>
  readc
  while (nec_(0)) {
    while (nec_('\n')) {
      if (eqc_('0')) {
        [-]>>>>
      }
      if (eqc_('1')) {
        [-]>>>+>
      }
      if (eqc_('2')) {
        [-]>>>++>
      }
      if (eqc_('-')) {
        [-]->->->->
      }
      if (eqc_('=')) {
        [-]->->->-->
      }
      < swapi pushi(5) swapi muli addi >
      readc
    }
    popc
    printi endl
    i_to_i64
    addi64
    >>>>>
    readc
  }
  <<<<<
  while (gti64_(0)) {
    pushi64(5) swapi64 divmodi64
    if (eqc_(0)) {
       popi64 pushc('0')
    }
    if (eqc_(1)) {
      popi64 pushc('1')
    }
    if (eqc_(2)) {
      popi64 pushc('2')
    }
    if (eqc_(3)) {
      --  addi64 pushc('=')
    }
    if (eqc_(4)) {
      --- addi64 pushc('-')
    }
    rollc9(1)
  }
  <<<<<<<<[
    .<
  ]
  endl
}
